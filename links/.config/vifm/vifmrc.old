" vim: filetype=vifm :

command! fzf :let $FCMD = '~/bin/kitty_split_ret "fd --hidden | fzf-tmux --preview \"[ -d {} ] && (ls -Alh --color=always {}/ | head -10) || bat --color=always --style=plain --line-range=:10 {}\" 2>/dev/tty" "%d"'
    \| let $FZF_RES = system($FCMD)
    \| if $FZF_RES != ''
    \|    goto $FZF_RES
    \| endif
nnoremap // :fzf<cr>

command! rg :let $RGCMD = 'rg --files-with-matches --ignore-case --hidden'
    \| let $FCMD = 'FZF_DEFAULT_COMMAND="rg --files" ~/bin/kitty_split_ret "fzf-tmux --exact --ansi --phony --bind \"change:reload:$RGCMD {q} || true\" --preview \"rg -i --pretty --context 2 {q} {}\" 2>/dev/tty" "%d"'
    \| let $FZF_RES = system($FCMD)
    \| if $FZF_RES != ''
    \|    goto $FZF_RES
    \| endif
nnoremap /? :rg<cr>

command! reload :write | restart
command! extract aunpack %f &>/dev/null &
command! archive apack %a %f &>/dev/null &

command! previewGitLog :setlocal previewprg='git -c color.ui=always log %c' | view!
command! previewGitStatus :setlocal previewprg='git -c color.ui=always status %d' | view!
command! previewGitDiff :setlocal previewprg='git -c color.ui=always difftool %d' | view!
command! previewMediainfo :setlocal previewprg='mediainfo %c' | view!
command! previewDefault :setlocal previewprg='' | view!
command! fzfPreviewSelector :let $FCMD = '~/bin/kitty_split_ret "printf \"%%s\n%%s\n%%s\n%%s\n%%s\" \"Git log\" \"Git diff\" \"Git status\" Mediainfo Default | fzf-tmux --no-preview 2>/dev/tty" "%d"'
    \| let $FZF_RES = system($FCMD)
    \| if $FZF_RES == "Git log"
    \|    :previewGitLog
    \| elseif $FZF_RES == "Git status"
    \|    :previewGitStatus
    \| elseif $FZF_RES == "Git diff"
    \|    :previewGitDiff
    \| elseif $FZF_RES == "Mediainfo"
    \|    :previewMediainfo
    \| elseif $FZF_RES == "Default"
    \|    :previewDefault
    \| endif
nnoremap <c-F3> :fzfPreviewSelector<cr>

nnoremap * ggVG
nnoremap <c-\> :bmarks<cr>

bmark! ~/dotfiles-reboot/ dotfiles

filetype *.ssh
       \ {Mount with sshfs}
       \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

filetype *.md5
       \ {Check MD5 hash sum}
       \ md5sum -c %f %S,

filetype *.sha1
       \ {Check SHA1 hash sum}
       \ sha1sum -c %f %S,

filetype *.sha256
       \ {Check SHA256 hash sum}
       \ sha256sum -c %f %S,

filetype *.sha512
       \ {Check SHA512 hash sum}
       \ sha512sum -c %f %S,

" atool
filetype *.tar.gz,*.tgz,*.tar.bz,*.tbz,*.tar.bz2,*.tbz2,
         \*.tar.Z,*.tZ,*.tar.lzo,*.tzo,*.tar.lz,*.tlz,*.tar.xz,*.txz,*.tar.7z,*.t7z,
         \*.tar,
         \*.zip,*.jar,*.war,*.rar,*.lha,*.lzh,
         \*.alz,*.ace,*.a,*.arj,*.arc,
         \*.rpm,*.deb,
         \*.cab,
         \*.gz,*.bz,*.bz2,
         \*.Z,*.lzma,*.lzo,*.lz,*.xz,*.rz,*.lrz,*.7z,
         \*.cpio
         \ aunpack %f
fileviewer *.tar.gz,*.tgz,*.tar.bz,*.tbz,*.tar.bz2,*.tbz2,
         \*.tar.Z,*.tZ,*.tar.lzo,*.tzo,*.tar.lz,*.tlz,*.tar.xz,*.txz,*.tar.7z,*.t7z,
         \*.tar,
         \*.zip,*.jar,*.war,*.rar,*.lha,*.lzh,
         \*.alz,*.ace,*.a,*.arj,*.arc,
         \*.rpm,*.deb,
         \*.cab,
         \*.gz,*.bz,*.bz2,
         \*.Z,*.lzma,*.lzo,*.lz,*.xz,*.rz,*.lrz,*.7z,
         \*.cpio
         \ als %f 2>/dev/null

" GPG signature
filetype *.asc
       \ {Check signature}
       \ !!gpg --verify %c

filetype <audio/*>,<video/*>
       \ {Play with mpv}
       \ mpv %f

" vifmimg
fileviewer *.pdf
        \ vifmimg pdfpreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

fileviewer *.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
        \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
        \ vifmimg videopreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear

fileviewer *.bmp,*.jpg,*.jpeg,*.png,*.xpm,*.gif
        \ kitty +kitten icat --place %pwx%ph@%pxx%py  --silent %c
        \ %pc
        \ kitty +kitten icat --clear --silent %pd

fileviewer *.ico
        \ vifmimg magickpreview %px %py %pw %ph %c
        \ %pc
        \ vifmimg clear
        
if has('win')
    filetype * start, explorer
else
    fileviewer *[^/] bat --paging=never --color=always --style=plain %c
    filetype * xdg-open 2>/dev/null &
endif


mark b ~/bin/
mark h ~/

command! df df -h %m 2> /dev/null
command! diff kitty +kitten diff %f %F
command! zip zip -r %f.zip %f
command! run !! ./%f
command! make !!make %a
command! mkcd :mkdir %a | cd %a
command! vgrep $EDITOR "+grep %a"


command! zzzInternalXC git log --name-only --format=%%n -- %d| CDUP=`git rev-parse --show-cdup` perl -lne 'print if /./ and s(^)($ENV{CDUP}) and -f and not $seen{$_}++' | head -%a %U


" Pdf
" filextype {*.pdf},<application/pdf> zathura %c %i &, apvlv %c, xpdf %c
" fileviewer {*.pdf},<application/pdf> pdftotext -nopgbrk %c -

" PostScript
" filextype {*.ps,*.eps,*.ps.gz},<application/postscript>
        " \ {View in zathura}
        " \ zathura %f,
        " \ {View in gv}
        " \ gv %c %i &,
" 
" Djvu
" filextype {*.djvu},<image/vnd.djvu>
        " \ {View in zathura}
        " \ zathura %f,
        " \ {View in apvlv}
        " \ apvlv %f,

" Audio
" filetype {*.wav,*.mp3,*.flac,*.m4a,*.wma,*.ape,*.ac3,*.og[agx],*.spx,*.opus},
        " \<audio/*>
       " \ {Play using ffplay}
       " \ ffplay -nodisp -autoexit %c,
       " \ {Play using MPlayer}
       " \ mplayer %f,
" fileviewer {*.mp3},<audio/mpeg> mp3info
" fileviewer {*.flac},<audio/flac> soxi

" Video
" filextype {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
          " \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
          " \*.as[fx]},
         " \<video/*>
        " \ {View using ffplay}
        " \ ffplay -fs -autoexit %f,
        " \ {View using Dragon}
        " \ dragon %f:p,
        " \ {View using mplayer}
        " \ mplayer %f,
" fileviewer {*.avi,*.mp4,*.wmv,*.dat,*.3gp,*.ogv,*.mkv,*.mpg,*.mpeg,*.vob,
           " \*.fl[icv],*.m2v,*.mov,*.webm,*.ts,*.mts,*.m4v,*.r[am],*.qt,*.divx,
           " \*.as[fx]},
          " \<video/*>
         " \ ffprobe -pretty %c 2>&1

" Web
" filextype {*.html,*.htm},<text/html>
        " \ {Open with dwb}
        " \ dwb %f %i &,
        " \ {Open with firefox}
        " \ firefox %f &,
        " \ {Open with uzbl}
        " \ uzbl-browser %f %i &,
" filetype {*.html,*.htm},<text/html> links, lynx

" Object
" filetype {*.o},<application/x-object> nm %f | less

" Man page
" filetype {*.[1-8]},<text/troff> man ./%c
" fileviewer {*.[1-8]},<text/troff> man ./%c | col -b

" Images
" filextype {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
        " \ {View in sxiv}
        " \ sxiv %f,
        " \ {View in gpicview}
        " \ gpicview %c,
        " \ {View in shotwell}
        " \ shotwell,
" fileviewer {*.bmp,*.jpg,*.jpeg,*.png,*.gif,*.xpm},<image/*>
         " \ identify %f
" 
" OpenRaster
" filextype *.ora
        " \ {Edit in MyPaint}
        " \ mypaint %f,

" Mindmap
" filextype *.vym
        " \ {Open with VYM}
        " \ vym %f &,

" MD5
" filetype *.md5
       " \ {Check MD5 hash sum}
       " \ md5sum -c %f %S,

" SHA1
" filetype *.sha1
       " \ {Check SHA1 hash sum}
       " \ sha1sum -c %f %S,

" SHA256
" filetype *.sha256
       " \ {Check SHA256 hash sum}
       " \ sha256sum -c %f %S,

" SHA512
" filetype *.sha512
       " \ {Check SHA512 hash sum}
       " \ sha512sum -c %f %S,

" GPG signature
" filetype {*.asc},<application/pgp-signature>
       " \ {Check signature}
       " \ !!gpg --verify %c,

" Torrent
" filetype {*.torrent},<application/x-bittorrent> ktorrent %f &
" fileviewer {*.torrent},<application/x-bittorrent> dumptorrent -v %c

" FuseZipMount
" filetype {*.zip,*.jar,*.war,*.ear,*.oxt,*.apkg},
        " \<application/zip,application/java-archive>
       " \ {Mount with fuse-zip}
       " \ FUSE_MOUNT|fuse-zip %SOURCE_FILE %DESTINATION_DIR,
       " \ {View contents}
       " \ zip -sf %c | less,
       " \ {Extract here}
       " \ tar -xf %c,
" fileviewer *.zip,*.jar,*.war,*.ear,*.oxt zip -sf %c

" ArchiveMount
" filetype {*.tar,*.tar.bz2,*.tbz2,*.tgz,*.tar.gz,*.tar.xz,*.txz},
        " \<application/x-tar>
       " \ {Mount with archivemount}
       " \ FUSE_MOUNT|archivemount %SOURCE_FILE %DESTINATION_DIR,
" fileviewer *.tgz,*.tar.gz tar -tzf %c
" fileviewer *.tar.bz2,*.tbz2 tar -tjf %c
" fileviewer *.tar.txz,*.txz xz --list %c
" fileviewer {*.tar},<application/x-tar> tar -tf %c

" Rar2FsMount and rar archives
" filetype {*.rar},<application/x-rar>
       " \ {Mount with rar2fs}
       " \ FUSE_MOUNT|rar2fs %SOURCE_FILE %DESTINATION_DIR,
" fileviewer {*.rar},<application/x-rar> unrar v %c

" IsoMount
" filetype {*.iso},<application/x-iso9660-image>
       " \ {Mount with fuseiso}
       " \ FUSE_MOUNT|fuseiso %SOURCE_FILE %DESTINATION_DIR,

" SshMount
" filetype *.ssh
       " \ {Mount with sshfs}
       " \ FUSE_MOUNT2|sshfs %PARAM %DESTINATION_DIR %FOREGROUND,

" FtpMount
" filetype *.ftp
       " \ {Mount with curlftpfs}
       " \ FUSE_MOUNT2|curlftpfs -o ftp_port=-,,disable_eprt %PARAM %DESTINATION_DIR %FOREGROUND,

" Fuse7z and 7z archives
" filetype {*.7z},<application/x-7z-compressed>
       " \ {Mount with fuse-7z}
       " \ FUSE_MOUNT|fuse-7z %SOURCE_FILE %DESTINATION_DIR,
" fileviewer {*.7z},<application/x-7z-compressed> 7z l %c

" Office files
" filextype {*.odt,*.doc,*.docx,*.xls,*.xlsx,*.odp,*.pptx,*.ppt},
         " \<application/vnd.openxmlformats-officedocument.*,
          " \application/msword,
          " \application/vnd.ms-excel>
        " \ libreoffice %f &
" fileviewer {*.doc},<application/msword> catdoc %c
" fileviewer {*.docx},
          " \<application/
           " \vnd.openxmlformats-officedocument.wordprocessingml.document>
         " \ docx2txt.pl %f -

" TuDu files
" filetype *.tudu tudu -f %c

" Qt projects
" filextype *.pro qtcreator %f &

" Directories
" filextype */
        " \ {View in thunar}
        " \ Thunar %f &,

" Filter-out build and temporary files
"
" filter! {*.lo,*.o,*.d,*.class,*.pyc,*.pyo,.*~}

" ------------------------------------------------------------------------------
" Sample mappings

" Display sorting dialog
nnoremap S :sort<cr>

" Open file in existing instance of gvim
"nnoremap o :!gvim --remote-tab-silent %f<cr>
" Open file in new instance of gvim
"nnoremap O :!gvim %f<cr>

" Open file in the background using its default program
nnoremap gb :file &<cr>l

" Interaction with system clipboard
if has('win')
    " Yank current directory path to Windows clipboard with forward slashes
    nnoremap yp :!echo %"d:gs!\!/! %i | clip<cr>
    " Yank path to current file to Windows clipboard with forward slashes
    nnoremap yf :!echo %"c:gs!\!/! %i | clip<cr>
elseif executable('xclip')
    " Yank current directory path into the clipboard
    nnoremap yd :!echo %d | xclip -selection clipboard %i<cr>
    " Yank current file path into the clipboard
    nnoremap yf :!echo %c:p | xclip -selection clipboard%i<cr>
elseif executable('xsel')
    " Yank current directory path into primary and selection clipboards
    nnoremap yd :!echo -n %d | xsel --input --primary %i &&
                \ echo -n %d | xsel --clipboard --input %i<cr>
    " Yank current file path into into primary and selection clipboards
    nnoremap yf :!echo -n %c:p | xsel --input --primary %i &&
                \ echo -n %c:p | xsel --clipboard --input %i<cr>
endif

" Mappings for faster renaming
nnoremap I cw<c-a>
nnoremap cc cw<c-u>
nnoremap A cw

" Open editor to edit vifmrc and apply settings after returning to vifm
nnoremap ,c :write | edit $MYVIFMRC | restart full<cr>
" Open gvim to edit vifmrc
"nnoremap ,C :!gvim --remote-tab-silent $MYVIFMRC &<cr>

" Toggle wrap setting on ,w key
nnoremap ,w :set wrap!<cr>

" Midnight commander alike mappings
" Open current directory in the other pane
nnoremap <a-i> :sync<cr>
" Open directory under cursor in the other pane
nnoremap <a-o> :sync %c<cr>
" Swap panes
nnoremap <c-u> <c-w>x

nmap ; :


" ------------------------------------------------------------------------------


" Add additional place to look for executables
"
" let $PATH = $HOME.'/bin/fuse:'.$PATH

" Block particular shortcut
"
" nnoremap <left> <nop>

" Export IPC name of current instance as environment variable and use it to
" communicate with the instance later.
"
" It can be used in some shell script that gets run from inside vifm, for
" example, like this:
"     vifm --server-name "$VIFM_SERVER_NAME" --remote +"cd '$PWD'"
"
" let $VIFM_SERVER_NAME = v:servername


command link ln -s %d/%f %D
command! cmpinternal kitty +kitten diff %a %S
command! cmp : if expand('%%c') == expand('%%f')
              \ |     echo expand('Comparing %%"c and %%"C:t ...')
              \ |     cmpinternal %c %C
              \ | else
              \ |     echo expand('Comparing files: %%"f ...')
              \ |     cmpinternal %f
              \ | endif


con.extension = {
    fb2 = mic(''),
    vim = mic(''),
    sql = mic(''),
    db = mic(''),
    rc = mic(''),
    sh = mic(''),
    zsh = mic(''),
    js = mic(''),
    ts = mic(''),
    pub = mic(''),
    pgp = mic(''),
    gpg = mic(''),
    sig = mic(''),
    css = mic(''),
    scss = mic(''),
    py = mic(''),
    md = mic(''),
    json = mic(''),
    lua = mic(''),
    java = mic(''),
    jar = mic(''),
    class = mic(''),
    pdf = mic(''),
    zip = mic(''),
    rar = mic(''),
    bz2 = mic(''),
    cab = mic(''),
    deb = mic(''),
    gz = mic(''),
    gzip = mic(''),
    ['7z'] = mic(''),
    rpm = mic(''),
    tar = mic(''),
    xz = mic(''),
    zst = mic(''),
    lzma = mic(''),
    log = mic(''),
    doc = mic(''),
    docx = mic(''),
    rs = mic(''),
    rlib = mic(''),
    zwc = mic(''),
    ini = mic(''),
}

con.special = {
    Downloads = mic(''),
    Documents = mic(''),
    Desktop = mic(''),
    Music = mic(''),
    Pictures = mic(''),
    Videos = mic(''),
    tmp = mic(''),
    home = mic('ﮟ'),
    root = mic('ﮈ'),
    github = mic(''),
    ['dotfiles-reboot'] = mic(''),
    ['.zshrc'] = mic(''),
    ['.zsh'] = mic(''),
    ['.zprofile'] = mic(''),
    ['.zshenv'] = mic(''),
    ['.zsh_history'] = mic(''),
    ['.xinitrc'] = mic(''),
    ['.xprofile'] = mic(''),
    ['.profile'] = mic(''),
    ['.Xresources'] = mic(''),
    ['.bashrc'] = mic(''),
    ['.bash_profile'] = mic(''),
    ['.bash_logout'] = mic(''),
    ['.bash_history'] = mic(''),
    ['.toprc'] = mic(''),
    ['.config'] = mic(''),
    ['.git'] = mic(''),
    ['.gitignore'] = mic(''),
    ['.gitconfig'] = mic(''),
    ['.gitmodules'] = mic(''),
    ['.gitattributes'] = mic(''),
    ['.ssh'] = mic(''),
    ['.gnupg'] = mic(''),
    ['lost+found'] = mic(''),
    ['.npm'] = mic(''),
    ['node_modules'] = mic(''),
    ['.rustup'] = mic(''),
    ['.cargo'] = mic(''),
    ['Cargo.toml'] = mic(''),
    ['Cargo.lock'] = mic(''),
    ['.mozilla'] = mic(''),
    ['.java'] = mic(''),
    ['.cache'] = mic(''),
}
set classify=' :dir:/, :exe:, :reg:, :link:,? :?:, ::../::,
            \  ::*.vim,,.vim,,*.vimrc,,.vimrc,,vimrc,,*.gvimrc,,.viminfo,,.netrwhist,,*.vba::,
            \  ::*.vim/,,.vim/,,*.nvim/::/,
            \ 勇::*.vifm,,vifminfo*,,vifmrc::,
            \ 勇::vifm/::/,
            \  ::*.exe,,*.dll,,*.msi,,*.bat,,*.cmd,,*.com,,*.run::,
            \  ::*.db,,*.dump,,*.sql::,
            \  ::*.iso,,*.bin,,*.nrg,,*.vdi,,*.cue,,*.dmg,,*.img,,*.mdf,,*.vcd,,*.vmdk::,
            \  ::VBoxMachines/,,VirtualBox VMs/::/,
            \  ::.git*::,
            \  ::.git/,,github/::/,
            \  ::.Xdefaults,,.Xresources,,.bashprofile,,.bash_profile,,.bash_logout,,bash_history,,.DS_Store,,.fasd,,.jack-settings,,.mime.types,,.pam_environment,,.profile,,.recently-used,,.selected_editor,,.zprofile,,.urlview,,.user-dirs.dirs,,.mimeapps.list,,.Xauthority,,.zshenv,,.zlogin,,.zlogout,,*.conf,,*.ini,,*.rc,,.*rc,,*rc,,*.yml,,*.yaml,,*.cfg::,
            \  ::.config/,,.zsh/::/,
            \  ::*.zsh,,.*.zsh,,*.sh,,*.bash,,*.fish::,
            \  ::Desktop/::/,
            \  ::Documents/,, My Documents/::/,
            \  ::Downloads/::/,
            \  ::Dropbox/::/,
            \  ::Google\ Drive/::/,
            \  ::*.aac,,*.anx,,*.ape,,*.asf,,*.au,,*.axa,,*.flac,,*.m2a,,*.m4a,,*.m4p,,*.mid,,*.midi,,*.mp3,,*.mpc,,*.oga,,*.ogg,,*.ogx,,*.ra,,*.ram,,*.rm,,*.spx,,*.wav,,*.wma,,*.ac3,,*.mka::,
            \  ::Music/::/,
            \  ::*.bmp,,*.gif,,*.ico,,*.jpeg,,*.jpg,,*.png,,*.svg,,*.svgz,,*.tga,,*.tiff,,*.xmb,,*.xcf,,*.xpm,,*.xspf,,*.xwd,,*.cr2,,*.dng,,*.3fr,,*.ari,,*.arw,,*.bay,,*.crw,,*.cr3,,*.cap,,*.data,,*.dcs,,*.dcr,,*drf,,*.eip,,*.erf,,*.fff,,*.gpr,,*.iiq,,*.k25,,*.kdc,,*.mdc,,.*mef,,*.mos,,.*.mrw,,.*.obm,,*.orf,,*.pef,,*.ptx,,*.pxn,,*.r3d,,*.raf,,*.raw,,*.rwl,,*.rw2,,*.rwz,,*.sr2,,*.srf,,*.srf,,*.srw,,*.tif,,*.x3f,,.fehbg,,.*.ppm,,*.xbm,,*.pbm,,*.pgm::,
            \  ::Pictures/,,My Pictures/::/,
            \  ::*.rlib,,*.rs::,
            \  ::.rustup/::/,
            \  ::*.go::,
            \  ::.cargo/,,go/::/,
            \  ::Public/::/,
            \  ::Templates/::/,
            \  ::*.avi,,*.flv,,*.m4v,,*.mkv,,*.mov,,*.mp4,,*.mp4v,,*.mpeg,,*.mpg,,*.webm,,*.ts,,*.axv,,*.divx,,*.m2v,,*.ogv,,*.nuv,,*.wmv,,*.xvid::,
            \  ::Videos/::/,
            \  ::*.js,,package.json,,package-lock.json::,
            \  ::node_modules/,,.node_modules/,,.npm/::/,
            \  ::lost+found/::/,
            \  ::favicon.*::,
            \  ::gruntfile.coffee,,gruntfile.js,,gruntfile.ls::,
            \  ::gulpfile.coffee,,gulpfile.js,,gulpfile.ls::,
            \  ::ledger::,
            \  ::known_hosts,,authorized_keys,,*.key,,*.pub,,id_rsa_*,,*.gpg,,*.kbx::,
            \  ::.gnupg/,,.ssh/::/,
            \  ::.tmux.conf::,
            \  ::.tmux/::/,
            \  ::*.jsx::,
            \ λ ::*.ml,,*.mli::,
            \  ::*.styl::,
            \  ::*.scss::,
            \  ::*.py,,*.pyc,,*.pyd,,*.pyo::,
            \  ::*.php::,
            \  ::*.markdown,,*.md::,
            \  ::license,,copyright,,copying,,LICENSE,,COPYRIGHT,,COPYING*,,LICENSE.*,,BUGS,,ChangeLog*,,FAQ,,INSTALL*,,NEWS,,README.*,,README,,AUTHORS,,TODO,,THANKS::,
            \  ::*.json::,
            \  ::*.ejs,,*.htm,,*.html,,*.slim,,*.xml,,*.xhtml::,
            \  ::*.hbs,,*.mustasche::,
            \  ::*.css,,*.less::,
            \  ::*.rss::,
            \  ::*.coffee::,
            \  ::*.twig::,
            \  ::*.c++,,*.cc,,*.c,,*.cpp,,*.cxx,,*.c,,*.h::,
            \  ::*.hs,,*.lhs::,
            \  ::*.lua::,
            \  ::*.jl::,
            \  ::*.ts::,
            \  ::*.sln,,*.suo::,
            \  ::*.diff,,*.sum,,*.md5,,*.sha512::,
            \  ::*.scala::,
            \  ::*.java,,*.jar,,*.class::,
            \  ::*.xul::,
            \  ::*.clj,,*.cljc::,
            \  ::*.pl,,*.pm,,*.t::,
            \  ::*.cljs,,*.edn::,
            \  ::*.rb,,Rakefile::,
            \  ::*.dart::,
            \  ::*.f#,,*.fs,,*.fsi,,*.fsscript,,*.fsx::,
            \  ::*.d::,
            \  ::*.erl,,*.hrl::,
            \  ::*.ai::,
            \  ::*.psb,,*.psd::,
            \  ::*.pdf::,
            \  ::*.epub,,*.fb2,,*.djvu,,*.rtf::,
            \  ::*.7z,,*.apk,,*.bz2,,*.cab,,*.cpio,,*.deb,,*.gem,,*.gz,,*.gzip,,*.lh,,*.lzh,,*.lzma,,*.rar,,*.rpm,,*.tar,,*.tgz,,*.xz,,*.zip,,*.ace,,*.arj,,*.dz,,*.rz,,*.taz,,*.tb2,,*.tbz,,*.tbz2,,*.tlz,,*.trz,,*.txz,,*.tz,,*.tz2,,*.z,,*.zoo::,
            \  ::*.cbr,,*.cbz::,
            \  ::*.log::,
            \  ::*.doc,,*.docx,,*.adoc::,
            \  ::*.xls,,*.xls[mx]::,
            \  ::*.pptx,,*.ppt::,
            \  ::*.cs::,
            \  ::procfile::,
            \  ::Dockerfile,,docker-compose.yml::,
            \  ::Makefile,,Makefile.*,,CMakeLists.txt,,config.mk,,config.m4,,config.ac,,*.a,,*.cmake,,*.jl,,*.o,,*.so,,a.out,,configure::'
