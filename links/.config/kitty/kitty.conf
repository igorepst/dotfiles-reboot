# vim:ft=conf:fileencoding=utf-8

font_family      DejaVu Sans Mono Nerd Font Complete Mono
bold_font        DejaVu Sans Mono Bold Nerd Font Complete Mono
italic_font      DejaVuSansMono Nerd Font Mono Oblique
bold_italic_font DejaVuSansMono Nerd Font Mono Bold Oblique
font_size 16.0

symbol_map U+f101-U+f212 nonicon
symbol_map U+ea60-U+ebbc codicon

scrollback_lines 10000
scrollback_pager nvim -u NONE -c "set laststatus=0 clipboard=unnamedplus" -c "autocmd TermOpen * normal G" -c "map q :qa!<CR>" -c "map <C-c> :qa!<CR>" -c "silent write! /tmp/kitty_scrollback_buffer | te echo -n \"$(sed -e 's/\\]8;;file:[^\\\\]*\\\\//g' /tmp/kitty_scrollback_buffer)\"; rm -f /tmp/kitty_scrollback_buffer; sleep 1000"

cursor_shape block
cursor_blink_interval 0
copy_on_select clipboard
select_by_word_characters @-./_~?&=%+#
focus_follows_mouse yes
default_pointer_shape arrow
enable_audio_bell no
hide_window_decorations yes
update_check_interval 0
enabled_layouts splits,all
close_on_child_death yes

tab_bar_style powerline
tab_bar_min_tabs 1
tab_switch_strategy previous
tab_activity_symbol ðŸ—²|
tab_title_template "{title} {sup.index}"

allow_remote_control socket-only
listen_on unix:@kitty

#: Mouse actions {{{

#: Mouse buttons can be remapped to perform arbitrary actions. The
#: syntax for doing so is:

#: .. code-block:: none

#:     mouse_map button-name event-type modes action

#: Where ``button-name`` is one of ``left``, ``middle``, ``right`` or
#: ``b1 ... b8`` with added keyboard modifiers, for example:
#: ``ctrl+shift+left`` refers to holding the ctrl+shift keys while
#: clicking with the left mouse button. The number ``b1 ... b8`` can
#: be used to refer to upto eight buttons on a mouse.

#: ``event-type`` is one ``press``, ``release``, ``doublepress``,
#: ``triplepress``, ``click`` and ``doubleclick``.  ``modes``
#: indicates whether the action is performed when the mouse is grabbed
#: by the program running in the terminal, or not. It can have one or
#: more or the values, ``grabbed,ungrabbed``. ``grabbed`` refers to
#: when the program running in the terminal has requested mouse
#: events. Note that the click and double click events have a delay of
#: click_interval to disambiguate from double and triple presses.

#: You can run kitty with the kitty --debug-input command line option
#: to see mouse events. See the builtin actions below to get a sense
#: of what is possible.

#: If you want to unmap an action map it to ``no-op``. For example, to
#: disable opening of URLs with a plain click::

#:     mouse_map left click ungrabbed no-op

#: .. note::
#:     Once a selection is started, releasing the button that started it will
#:     automatically end it and no release event will be dispatched.

mouse_map left            click ungrabbed mouse_click_url_or_select
mouse_map shift+left      click grabbed,ungrabbed mouse_click_url_or_select
mouse_map ctrl+shift+left release grabbed,ungrabbed mouse_click_url

#: Variant with ctrl+shift is present because the simple click based
#: version has an unavoidable delay of click_interval, to disambiguate
#: clicks from double clicks.

mouse_map ctrl+shift+left press grabbed discard_event

#: Prevent this press event from being sent to the program that has
#: grabbed the mouse, as the corresponding release event is used to
#: open a URL.

mouse_map middle        release ungrabbed paste_from_selection
mouse_map left          press ungrabbed mouse_selection normal
mouse_map ctrl+alt+left press ungrabbed mouse_selection rectangle
mouse_map left          doublepress ungrabbed mouse_selection word
mouse_map left          triplepress ungrabbed mouse_selection line

#: Select the entire line

mouse_map ctrl+alt+left triplepress ungrabbed mouse_selection line_from_point

#: Select from the clicked point to the end of the line

mouse_map right               press ungrabbed mouse_selection extend
mouse_map shift+middle        release ungrabbed,grabbed paste_selection
mouse_map shift+left          press ungrabbed,grabbed mouse_selection normal
mouse_map shift+ctrl+alt+left press ungrabbed,grabbed mouse_selection rectangle
mouse_map shift+left          doublepress ungrabbed,grabbed mouse_selection word
mouse_map shift+left          triplepress ungrabbed,grabbed mouse_selection line

#: Select the entire line

mouse_map shift+ctrl+alt+left triplepress ungrabbed,grabbed mouse_selection line_from_point

#: Select from the clicked point to the end of the line

mouse_map shift+right press ungrabbed,grabbed mouse_selection extend
#: }}}

kitty_mod ctrl+shift
clear_all_shortcuts yes

map kitty_mod+m>c create_marker
map kitty_mod+m>r remove_marker

map kitty_mod+c copy_to_clipboard
map kitty_mod+v paste_from_clipboard

map kitty_mod+up        kitten kitty-smart-scroll/smart_scroll.py scroll_line_up ctrl+shift+up
map kitty_mod+down      kitten kitty-smart-scroll/smart_scroll.py scroll_line_down ctrl+shift+down
map kitty_mod+page_up   kitten kitty-smart-scroll/smart_scroll.py scroll_page_up ctrl+shift+page_up
map kitty_mod+page_down kitten kitty-smart-scroll/smart_scroll.py scroll_page_down ctrl+shift+page_down
map kitty_mod+home      kitten kitty-smart-scroll/smart_scroll.py scroll_home ctrl+shift+home
map kitty_mod+end       kitten kitty-smart-scroll/smart_scroll.py scroll_end ctrl+shift+end
map kitty_mod+h         show_scrollback

map kitty_mod+l>r   layout_action rotate
map kitty_mod+l>t   toggle_layout stack
map kitty_mod+l>n   next_layout

map kitty_mod+w>h       launch --location=hsplit
map kitty_mod+w>v       launch --location=vsplit
map kitty_mod+w>d       close_window
map kitty_mod+w>right   next_window
map kitty_mod+w>left    previous_window
map kitty_mod+w>f       move_window_forward
map kitty_mod+w>b       move_window_backward
map kitty_mod+w>r       start_resizing_window
map kitty_mod+w>1       first_window
map kitty_mod+w>2       second_window
map kitty_mod+w>3       third_window
map kitty_mod+w>4       fourth_window
map kitty_mod+w>5       fifth_window
map kitty_mod+w>6       sixth_window
map kitty_mod+w>7       seventh_window
map kitty_mod+w>8       eighth_window
map kitty_mod+w>9       ninth_window
map kitty_mod+w>0       tenth_window
map kitty_mod+w>w>up    move_window up
map kitty_mod+w>w>left  move_window left
map kitty_mod+w>w>right move_window right
map kitty_mod+w>w>down  move_window down
map kitty_mod+w>n>left  neighboring_window left
map kitty_mod+w>n>right neighboring_window right
map kitty_mod+w>n>up    neighboring_window up
map kitty_mod+w>n>down  neighboring_window down

map kitty_mod+t         new_tab
map kitty_mod+d         close_tab
map kitty_mod+z>right   next_tab
map kitty_mod+z>left    previous_tab
map kitty_mod+z>n       new_tab
map kitty_mod+z>d       close_tab
map kitty_mod+z>f       move_tab_forward
map kitty_mod+z>b       move_tab_backward
map kitty_mod+z>t       set_tab_title
map kitty_mod+z>1       goto_tab 1
map kitty_mod+z>2       goto_tab 2
map kitty_mod+z>3       goto_tab 3
map kitty_mod+z>4       goto_tab 4
map kitty_mod+z>5       goto_tab 5
map kitty_mod+z>6       goto_tab 6
map kitty_mod+z>7       goto_tab 7
map kitty_mod+z>8       goto_tab 8
map kitty_mod+z>9       goto_tab 9
map kitty_mod+z>0       goto_tab 10

map kitty_mod+p>u kitten hints --type url --hints-text-color=red
map kitty_mod+p>f kitten hints --type path --hints-text-color=red --program -
map kitty_mod+p>o kitten hints --type path --hints-text-color=red
map kitty_mod+p>l kitten hints --type line --hints-text-color=red --program -
map kitty_mod+p>w kitten hints --type word --hints-text-color=red --program -
map kitty_mod+p>h kitten hints --type hash --hints-text-color=red --program -
map kitty_mod+p>n kitten hints --type linenum --hints-text-color=red
map kitty_mod+p>y kitten hints --type hyperlink --hints-text-color=red
map kitty_mod+p>i kitten unicode_input

map Alt+Insert kitten kitty_grab/grab.py

active_tab_font_style   bold
inactive_tab_font_style bold

include current-theme.conf
